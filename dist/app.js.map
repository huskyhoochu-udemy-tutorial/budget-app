{"version":3,"sources":["../app.js"],"names":["budgetController","Expense","id","description","value","Income","allExpenses","allIncomes","totalExpenses","data","allItems","exp","inc","totals","addItem","type","des","val","newItem","ID","length","push","UIController","DOMStrings","inputType","inputDescription","inputValue","inputButton","incomeContainer","expenseContainer","getInput","document","querySelector","valueAsNumber","addListItem","obj","html","newHtml","element","replace","insertAdjacentHTML","clearFields","fields","querySelectorAll","fieldsArr","Array","prototype","slice","call","forEach","getDOMStrings","controller","budgetCtrl","UICtrl","ctrlAddItem","input","setupEventListeners","DOM","addEventListener","event","keyCode","which","updateBudget","init"],"mappings":"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","file":"app.js","sourcesContent":["// 예산 컨트롤러\nconst budgetController = (function () {\n  const Expense = function (id, description, value) {\n    this.id = id;\n    this.description = description;\n    this.value = value;\n  };\n\n  const Income = function (id, description, value) {\n    this.id = id;\n    this.description = description;\n    this.value = value;\n  };\n\n  const allExpenses = [];\n  const allIncomes = [];\n  const totalExpenses = 0;\n\n  const data = {\n    allItems: {\n      exp: [],\n      inc: [],\n    },\n    totals: {\n      exp: 0,\n      inc: 0,\n    },\n  };\n\n  return {\n    addItem(type, des, val) {\n      let newItem;\n      let ID;\n\n      // 아이디는 배열 마지막 아이템의 아이디 +1 이다\n      if (data.allItems[type].length > 0) {\n        ID = data.allItems[type][data.allItems[type].length - 1].id + 1;\n      } else {\n        ID = 0;\n      }\n\n      // 수입 지출을 구분하는 조건문\n      if (type === 'exp') {\n        newItem = new Expense(ID, des, val);\n      } else if (type === 'inc') {\n        newItem = new Income(ID, des, val);\n      }\n\n\n      data.allItems[type].push(newItem);\n      return newItem;\n    },\n  };\n}());\n\n// UI 컨트롤러\nconst UIController = (function () {\n  const DOMStrings = {\n    inputType: '.add__type',\n    inputDescription: '.add__description',\n    inputValue: '.add__value',\n    inputButton: '.add__btn',\n    incomeContainer: '.income__list',\n    expenseContainer: '.expenses__list',\n  };\n\n  return {\n    getInput() {\n      return {\n        type: document.querySelector(DOMStrings.inputType).value,\n        description: document.querySelector(DOMStrings.inputDescription).value,\n        value: document.querySelector(DOMStrings.inputValue).valueAsNumber,\n      };\n    },\n\n    addListItem(obj, type) {\n      let html;\n      let newHtml;\n      let element;\n\n      // placeholder text를 만든다\n      if (type === 'inc') {\n        html = '<div class=\"item clearfix\" id=\"income-%id%\">' +\n          '<div class=\"item__description\">%description%</div>' +\n          '<div class=\"right clearfix\"><div class=\"item__value\">%value%</div>' +\n          '<div class=\"item__delete\">' +\n          '<button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button>' +\n          '</div></div></div>';\n        element = DOMStrings.incomeContainer;\n      } else if (type === 'exp') {\n        html = '<div class=\"item clearfix\" id=\"expense-%id%\">' +\n          '<div class=\"item__description\">%description%</div>' +\n          '<div class=\"right clearfix\"><div class=\"item__value\">%value%</div>' +\n          '<div class=\"item__percentage\">21%</div><div class=\"item__delete\">' +\n          '<button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button>' +\n          '</div></div></div>';\n        element = DOMStrings.expenseContainer;\n      }\n\n      // placeholder text를 실제 객체로 바꾼다\n      newHtml = html.replace('%id%', obj.id);\n      newHtml = newHtml.replace('%description%', obj.description);\n      newHtml = newHtml.replace('%value%', obj.value);\n\n      // 값을 HTML 위에 띄운다\n      document.querySelector(element).insertAdjacentHTML('beforeend', newHtml);\n    },\n\n    clearFields() {\n      const fields = document.querySelectorAll(`${DOMStrings.inputDescription}, ${DOMStrings.inputValue}`);\n\n      const fieldsArr = Array.prototype.slice.call(fields);\n\n      fieldsArr.forEach((element) => {\n        element.value = '';\n      });\n    },\n\n    getDOMStrings() {\n      return DOMStrings;\n    },\n  };\n}());\n\n// 글로벌 앱 컨트롤러\nconst controller = (function (budgetCtrl, UICtrl) {\n  // HTML 문서에서 필요한 DOM 객체만 가져와 item으로 가공하는 함수\n  const ctrlAddItem = function () {\n    //    1. input data를 item에  담기\n    const input = UICtrl.getInput();\n\n    //    2. item을 budget controller에 넘기기\n    const newItem = budgetCtrl.addItem(input.type, input.description, input.value);\n\n    //    3. item을 UI에 추가하기\n    UICtrl.addListItem(newItem, input.type);\n\n    //    4. input 창을 지우기\n    UICtrl.clearFields();\n  };\n\n  // 이벤트 리스너 함수\n  const setupEventListeners = function () {\n    // UIController에 정의해 둔 CSS 선택자를 꺼낸다\n    const DOM = UICtrl.getDOMStrings();\n    // 이벤트 리스너 1. 체크 버튼을 누를 경우\n    document.querySelector(DOM.inputButton).addEventListener('click', ctrlAddItem);\n\n    // 이벤트 리스너 2. enter 키를 누를 경우\n    document.addEventListener('keypress', (event) => {\n      if (event.keyCode === 13 || event.which === 13) {\n        ctrlAddItem();\n      }\n    });\n  };\n\n  // 총 예산 업데이트 함수\n  const updateBudget = function () {\n    //    1. 예산을 계산하기\n\n    //    2. 예산을 UI에 띄우기\n\n  };\n\n\n  return {\n    init() {\n      setupEventListeners();\n    },\n  };\n}(budgetController, UIController));\n\n// 컨트롤러 함수를 초기화\ncontroller.init();\n"]}